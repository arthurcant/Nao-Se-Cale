<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API-SITE-Mulher</name>
    </assembly>
    <members>
        <member name="M:API_SITE_Mulher.Controllers.AutenticacaoController.Signin(API_SITE_Mulher.Data.VO.UserVO)">
            <summary>
            End-point de fazer o login.
            </summary>
            <returns>Retorna um Token.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.AutenticacaoController.Resgiste(API_SITE_Mulher.Data.VO.UsuarioRegisterVO)">
            <summary>
            End-point para fazer o registro um usuário no sistema.
            </summary>
            <returns>Retorna o usuário resgistrado.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.AutenticacaoController.Refresh(API_SITE_Mulher.Data.VO.RefreshTokenVO)">
            <summary>
            End-point para atualizar o acesso do token de um usuário já autenticado na API.
            </summary>
            <returns>Retorna o token com o acesso atualizado da API.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.AutenticacaoController.Revoke">
            <summary>
            Esse end-point revogar o refresh token do usuário autenticado na API.
            </summary>
            <remarks>
            Ao revogar o refresh token do usuário ele só poderá usufruir dos recursos da API somente enquando o seu token ainda não expirou.
            </remarks>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.CategoriasController.Get(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Retorna os dados das categorias paginados.
            </summary>
            <param name="sortDirection"> Receber a instrução se os dados vão ser enviados pela ordem asc (ascendente) ou desc (decendente).</param>
            <param name="pageSize">Receber o números de elementos que seram enviados por retorno.</param>
            <param name="page">Especifica o número da página consultada.</param>
            <param name="name">Parametro query opcional cujo recebe o nome do titulo da categoria a ser buscada.</param>
            <returns>Retorna um objeto PagedSearchVO.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.CategoriasController.GetPosteresByIdCategoria(System.Int32)">
            <summary>
            End-point que busca todos os posteres relacionado a uma categoria.
            </summary>
            <param name="id_categoria"> Id da categoria a ser consultada.</param>
            <returns></returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.CategoriasController.CreateCategoria(API_SITE_Mulher.Model.CategoriasDePosters)">
            <summary>
            End-point que registra uma categoria nova.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.CategoriasController.AddCategoriasParaPoster(System.Int32,System.Int32)">
            <summary>
            End-point que adiciona uma categoria ao um poster
            </summary>
            <param name="idPoster"> Id do poster a atualizado.</param>
            <param name="idCategoria"> Id da categoria a ser atualizada no poster.</param>
            <returns></returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.CategoriasController.UpdateCategoria(API_SITE_Mulher.Model.CategoriasDePosters)">
            <summary>
            End-point que Atualiza uma categoria.
            </summary>
            <param name="categoria"></param>
            <returns>Retornar o objeto CategoriasDePosters atualizado.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.CategoriasController.DeleteCategoria(System.Int32)">
            <summary>
            End-point que apagar uma categoria.
            </summary>
            <param name="idcategoria"> Id da categoria a ser excluida.</param>
            <returns></returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.PosteresController.Get(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Retorna os dados dos posteres paginados.
            </summary>
            <param name="sortDirection"> Receber a instrução se os dados vão ser enviados pela ordem asc (ascendente) ou desc (decendente).</param>
            <param name="pageSize">Receber o números de elementos que seram enviados por retorno.</param>
            <param name="page">Especifica o número da página consultada.</param>
            <param name="title">Parametro query opcional cujo recebe o nome do titulo da categoria a ser buscada.</param>
            <returns>Retorna um objeto PagedSearchVO.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.PosteresController.RegisterPoster(API_SITE_Mulher.Data.VO.PosterVO)">
            <summary>
             O end-point que registrar um poster.
            </summary>
            <param name="poster"></param>
            <remarks>
            No "tags": [ 0 ] você pode passar os números de Ids de categorias já existentes no sistema para está adicionando ao novo poster registrado.
            </remarks>
            <returns>retorna um poster registrado.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.PosteresController.UpdatePoster(API_SITE_Mulher.Model.Poster)">
            <summary>
            O end-point Atualizar o poster.
            </summary>
            <param name="poster"></param>
            <returns>Retorna o objeto do poster atualizado.</returns>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.PosteresController.UpdateUrlImagePoster(System.Int32,API_SITE_Mulher.Data.VO.ImageUrlVO)">
            <summary>
            O end-point Atualizar o atributo UrlImagePoster de um poster.
            </summary>
            <param name="poster"></param>
        </member>
        <member name="M:API_SITE_Mulher.Controllers.PosteresController.DeletePoster(System.Int64)">
            <summary>
            O end-point que deletar um poster.
            </summary>
            <param name="poster"></param>
            <returns>Retorna o objeto do poster atualizado.</returns>
        </member>
    </members>
</doc>
